@use 'variables';
@use "../../styles/tools/elevation";
@use "../../styles/variables" as styles-variables;


.s-switch__track,
.s-switch__thumb {
	background-color: currentColor;
	pointer-events: none;
}

.s-switch__track {
	color: var(--theme-controls-track-inactive);
	border-radius: variables.$switch-track-border-radius;
	width: variables.$switch-track-width;
	height: variables.$switch-track-height;
	left: variables.$switch-track-x;
	position: absolute;
	opacity: variables.$switch-track-opacity;
	right: variables.$switch-track-x;
	top: variables.$switch-track-top;
	transition: background-color styles-variables.$primary-transition;
	will-change: background-color;
}

.s-switch__thumb {
	color: var(--theme-controls-thumb-inactive);
	border-radius: 50%;
	top: variables.$switch-thumb-top;
	height: variables.$switch-thumb-height;
	position: relative;
	width: variables.$switch-thumb-width;
	display: flex;
	justify-content: center;
	align-items: center;
	transition: styles-variables.$primary-transition;
	will-change: transform;
	@include elevation.elevation(4);

	&::before {
		background: currentColor;
		transform: scale(2);
		opacity: 0.2;
		border-radius: inherit;
		position: absolute;
		bottom: 0;
		left: 0;
		right: 0;
		top: 0;
		display: none;
		transform-origin: center center;
		content: '';
	}
}

.s-switch {
	display: flex;
	align-items: center;
	position: relative;

	label {
		margin-left: 8px;
	}
}

.s-switch__wrapper {
	width: variables.$switch-width;
	display: inline-flex;
	flex: 0 0 auto;
	height: 24px;
	position: relative;

	&:hover {
		.s-switch__thumb::before {
			display: block;
		}
	}

	&.inset {
		width: variables.$switch-track-inset-width;

		.s-switch__track {
			width: variables.$switch-track-inset-width;
			border-radius: variables.$switch-track-inset-border-radius;
			height: variables.$switch-track-inset-height;
			left: -4px;
			opacity: variables.$switch-track-inset-opacity;
			top: calc(50% - #{variables.$switch-track-inset-height * 0.5});
		}

		.s-switch__thumb {
			box-shadow: none;
		}
	}

	&.dense {
		.s-switch__thumb {
			width: variables.$switch-thumb-dense-width;
			height: variables.$switch-thumb-dense-height;
		}

		.s-switch__track {
			height: variables.$switch-track-dense-height;
			width: variables.$switch-track-dense-width;
		}

		&.inset {
			.s-switch__track {
				height: variables.$switch-track-dense-inset-height;
				width: variables.$switch-track-dense-inset-width;
				top: variables.$switch-track-dense-top;
				left: -3px;
			}
		}
	}

	&.disabled {
		opacity: variables.$switch-disabled-opacity;
		pointer-events: none;

		.s-switch__thumb {
			color: var(--theme-controls-thumb-disabled);

			&::before {
				display: none;
			}
		}

		// stylelint-disable-next-line no-descending-specificity
		.s-switch__track {
			color: var(--theme-controls-track-disabled);
		}
	}

	&>input {
		position: absolute;
		opacity: 0;
		width: 100%;
		height: 100%;
		user-select: none;
		cursor: pointer;

		&:checked~ {

			// stylelint-disable-next-line no-descending-specificity
			.s-switch__track,
			.s-switch__thumb {
				color: inherit;
			}

			.s-switch__thumb {
				transform: translate(variables.$switch-dirty-offset-x);
			}
		}
	}
}